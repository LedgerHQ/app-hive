stages:
 - test
 - build
 - upload
 - release

variables:
  NANOS_APP: "nanos-$CI_COMMIT_TAG.hex"
  NANOX_APP: "nanox-$CI_COMMIT_TAG.hex"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/binaries/$CI_COMMIT_TAG"

build:
  image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix:
      - TARGET: [nanos, nanox]
  script:
    - mkdir -p out
    - export SDK=${TARGET^^}_SDK
    - BOLOS_SDK=${!SDK} make clean && BOLOS_SDK=${!SDK} make
    - cp bin/app.hex out/${TARGET}-$CI_COMMIT_TAG.hex
  artifacts:
    paths:
      - out/

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file out/${NANOX_APP} $PACKAGE_REGISTRY_URL/${NANOX_APP}
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file out/${NANOS_APP} $PACKAGE_REGISTRY_URL/${NANOS_APP}

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name $CI_COMMIT_TAG --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"$NANOX_APP\",\"url\":\"$PACKAGE_REGISTRY_URL/$NANOX_APP\"}" \
        --assets-link "{\"name\":\"$NANOS_APP\",\"url\":\"$PACKAGE_REGISTRY_URL/$NANOS_APP\"}"